@using AzadiSoft.UserManager.Framework
@using AzadiSoft.UserManager.Resources
@model AzadiSoft.UserManager.ViewModels.UserViewModel

@{
    var formControl = "form-control";

    var labelCol = "control-label col-md-2";

    var editorCol = "col-md-10";

    var formGroup = "form-group ";

    var userNameAlert = "UserName_Alert";

    var validator = "Validator_";

    var formGroupCol = ViewData[Consts.FormGroupCol] ?? "col-md-6";

    formGroup += formGroupCol;

    var editMode = Convert.ToBoolean(ViewData[Consts.EditMode]);

}

<script type="text/javascript">

    var isEditMode = @editMode.ToString().ToLower();

    function getValidationMessageElement(fieldName) {

        var span = $('#@validator' + fieldName);

        return span;
    }

    function getUserNameBox() {

        return $('#@Html.IdFor(x => x.UserName)');
    }

    function getEmailBox() {

        return $('#@Html.IdFor(x => x.Email)');
    }

    function isUserAlreadyRegistered(userName) {

        var box = getUserNameBox();

        var messageElement = getValidationMessageElement('@Html.FieldNameFor(x => x.UserName)');

        if (userName == '' || !box.valid()) {

            messageElement.html('');

            return;
        }

        var url = '@Url.Action("IsUserNameRegistered")';

        var postData = {

            userName: userName
        }

        $.getJSON(url, postData, function(result) {


            if (result == true) {

                messageElement.html('<span> شناسه کاربری <b>' + userName + '</b> قبلا به ثبت رسیده است. </span>').css('color','red');

            } else {

                messageElement.html('<span> شناسه کاربری <b>' + userName + '</b> مجاز به ثبت است. </span>').css('color', 'green');

            }

        });
    }

    function isEmailAlreadyRegistered(email) {

        var box = getEmailBox();

        var messageElement = getValidationMessageElement('@Html.FieldNameFor(x => x.Email)');

        if (email == '' || !box.valid()) {

            messageElement.html('');

            return;
        }

        var url = '@Url.Action("IsEmailRegistered")';

        var postData = {

            email: email
        }

        $.getJSON(url, postData, function(result) {


            if (result == true) {

                messageElement.html('<span> ایمیل <b>' + email + '</b> قبلا در سایت ثبت نام کرده است. </span>').css('color','red');

            } else {

                messageElement.html('<span> ایمیل <b>' + email + '</b> مجاز به ثبت نام است. </span>').css('color', 'green');

            }

        });


    }

</script>

<div class="@formGroup">

    @Html.LabelFor(x => x.UserName, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.UserName, new { htmlAttributes = new { @class = formControl, onblur = "isUserAlreadyRegistered($(this).val());"  } })

        @Html.ValidationMessageFor(x => x.UserName)

        <div id="@validator@Html.FieldNameFor(x => x.UserName)"></div>

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.Password, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.Password)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.Email, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = formControl, onblur = "isEmailAlreadyRegistered($(this).val())" } })

        @Html.ValidationMessageFor(x => x.Email)

        <div id="@validator@Html.FieldNameFor(x => x.Email)"></div>


    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.FirstName, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.FirstName, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.FirstName)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.LastName, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.LastName, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.LastName)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.Gender, new { @class = labelCol })

    <div class="@editorCol">

        @Html.DropDownListFor(x => x.Gender, Model.Gender_ListItems, new { @class = formControl })

        @Html.ValidationMessageFor(x => x.Gender)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.Birthday, new { @class = labelCol })

    <div class="@editorCol">

        @*@Html.EditorFor(x => x.Birthday,"", new { htmlAttributes = new { @class = formControl } })*@

        @Html.Kendo().DatePickerFor(x => x.Birthday).HtmlAttributes(new{style="width:100%"})

        @Html.ValidationMessageFor(x => x.Birthday)

    </div>

</div>


<div class="@formGroup">

    @Html.LabelFor(x => x.EducationLevel_ID, new { @class = labelCol })

    <div class="@editorCol">

        @Html.DropDownListFor(x => x.EducationLevel_ID, Model.EducationLevelListItems, new { @class = formControl })

        @Html.ValidationMessageFor(x => x.EducationLevel_ID)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.Role_ID, new { @class = labelCol })

    <div class="@editorCol">

        @Html.DropDownListFor(x => x.Role_ID, Model.RoleListItems, new { @class = formControl })

        @Html.ValidationMessageFor(x => x.Role_ID)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.MobileNumber, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.MobileNumber, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.MobileNumber)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.NationalCode, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.NationalCode, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.NationalCode)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.HomePhoneNumber, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.HomePhoneNumber, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.HomePhoneNumber)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.WorkPhoneNumber, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.WorkPhoneNumber, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.WorkPhoneNumber)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.CompanyName, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.CompanyName, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.CompanyName)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.Country, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.Country, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.Country)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.City, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.City, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.City)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.Address, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.Address, new { htmlAttributes = new { @class = formControl } })

        @Html.ValidationMessageFor(x => x.Address)

    </div>

</div>

<div class="@formGroup">

    @Html.LabelFor(x => x.Notes, new { @class = labelCol })

    <div class="@editorCol">

        @Html.EditorFor(x => x.Notes, new { htmlAttributes = new { @class = formControl, style = "height:200px;" } })

        @Html.ValidationMessageFor(x => x.Notes)

    </div>

</div>
